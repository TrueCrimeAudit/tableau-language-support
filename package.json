{
  "name": "tableau-language-support",
  "displayName": "Tableau Language Support",
  "description": "Complete language support for Tableau calculation language with syntax highlighting, IntelliSense, validation, formatting, 100+ snippets, keyboard shortcuts, and advanced analytics patterns",
  "version": "1.5.1",
  "publisher": "TrueCrimeAudit",
  "icon": "images/tableau-icon.png",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/TrueCrimeAudit/tableau-language-support"
  },
  "homepage": "https://github.com/TrueCrimeAudit/tableau-language-support#readme",
  "bugs": {
    "url": "https://github.com/TrueCrimeAudit/tableau-language-support/issues"
  },
  "keywords": [
    "tableau",
    "calculation",
    "language",
    "syntax",
    "highlighting",
    "intellisense",
    "autocomplete",
    "validation",
    "formatting",
    "lsp",
    "language-server"
  ],
  "galleryBanner": {
    "color": "#1f77b4",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Programming Languages",
    "Language Packs",
    "Snippets",
    "Formatters",
    "Linters"
  ],
  "main": "./out/extension",
  "activationEvents": [
    "onLanguage:twbl"
  ],
  "contributes": {
    "configurationDefaults": {
      "[twbl]": {
        "editor.formatOnSave": false,
        "editor.stickyScroll.defaultModel": "foldingProviderModel",
        "files.eol": "\n",
        "editor.semanticHighlighting.enabled": true
      }
    },
    "languages": [
      {
        "id": "twbl",
        "extensions": [
          ".twbl"
        ],
        "aliases": [
          "Tableau",
          "TabLang"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "twbl",
        "scopeName": "source.twbl",
        "path": "./syntaxes/twbl.tmLanguage.json"
      }
    ],
    "semanticTokenTypes": [
      {
        "id": "keyword",
        "description": "Tableau keywords like IF, THEN, CASE"
      },
      {
        "id": "function",
        "description": "Tableau functions like SUM, AVG, DATEPART"
      },
      {
        "id": "variable",
        "description": "Field references and calculated fields"
      },
      {
        "id": "constant",
        "description": "Numbers, TRUE, FALSE, NULL"
      },
      {
        "id": "operator",
        "description": "Mathematical and logical operators"
      },
      {
        "id": "string",
        "description": "String literals"
      },
      {
        "id": "comment",
        "description": "Comments (single-line and multi-line)"
      }
    ],
    "snippets": [
      {
        "language": "twbl",
        "path": "./snippets/twbl.json"
      },
      {
        "language": "twbl",
        "path": "./snippets/slash-commands.json"
      },
      {
        "language": "twbl",
        "path": "./snippets/advanced-patterns.json"
      }
    ],
    "problemMatchers": [
      {
        "name": "twbl",
        "owner": "tableau",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "([^\\s]*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(note|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Tableau",
      "properties": {
        "tableau-language-support.enableHover": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable hover tooltips for Tableau functions and keywords",
          "default": true
        },
        "tableau-language-support.enableCompletion": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable auto-completion for Tableau functions",
          "default": true
        },
        "tableau-language-support.enableSignatureHelp": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable intelligent parameter hints for Tableau functions",
          "default": true
        },
        "tableau-language-support.enableDiagnostics": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable syntax validation and error reporting",
          "default": true
        },
        "tableau-language-support.trace.server": {
          "scope": "window",
          "type": "string",
          "description": "Traces the communication between VS Code and the Tableau language server.",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off"
        },
        "tableau-language-support.enableSnippets": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable snippet completions for Tableau functions",
          "default": true
        },
        "tableau-language-support.semanticTokens": {
          "scope": "resource",
          "type": "string",
          "description": "Set level of semantic tokens for Tableau syntax highlighting",
          "enum": [
            "none",
            "partial",
            "full"
          ],
          "default": "full"
        },
        "tableau-language-support.enableFormatting": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable automatic formatting for Tableau expressions",
          "default": false
        },
        "tableau-language-support.codeLens.enabled": {
          "scope": "resource",
          "type": "boolean",
          "description": "Enable all code lens features",
          "default": true
        },
        "tableau-language-support.codeLens.formatExpression": {
          "scope": "resource",
          "type": "boolean",
          "description": "Show 'Format Expression' code lens on IF and CASE statements",
          "default": false
        },
        "tableau-language-support.codeLens.explainLOD": {
          "scope": "resource",
          "type": "boolean",
          "description": "Show 'Explain LOD' code lens on Level of Detail expressions",
          "default": false
        },
        "tableau-language-support.codeLens.showFunctionHelp": {
          "scope": "resource",
          "type": "boolean",
          "description": "Show 'Show Function Help' code lens on aggregate functions",
          "default": false
        },
        "tableau-language-support.codeLens.copyWithComment": {
          "scope": "resource",
          "type": "boolean",
          "description": "Show 'Copy with Comment' code lens on all expressions",
          "default": false
        },
        "tableau-language-support.logging.level": {
          "scope": "window",
          "type": "string",
          "description": "Set the logging level for the extension",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "default": "info"
        },
        "tableau-language-support.logging.enableFileLogging": {
          "scope": "window",
          "type": "boolean",
          "description": "Enable logging to file in .vscode/logs/ directory",
          "default": false
        }
      }
    },
    "commands": [
      {
        "command": "tableau-language-support.lsp.restart",
        "title": "Restart Language Server",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.hello",
        "title": "Hello Tableau",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.runTests",
        "title": "Run Tableau LSP Tests",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.insertSnippet",
        "title": "Insert Snippet",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.formatExpression",
        "title": "Format Tableau Expression",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.validateExpression",
        "title": "Validate Tableau Expression",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.insertIfStatement",
        "title": "Insert IF Statement",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.insertCaseStatement",
        "title": "Insert CASE Statement",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.insertLodExpression",
        "title": "Insert LOD Expression",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.showFunctionHelp",
        "title": "Show Function Help",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.toggleComments",
        "title": "Toggle Comments",
        "category": "Tableau"
      },
      {
        "command": "tableau.showHelp",
        "title": "Show Help Panel",
        "category": "Tableau"
      },
      {
        "command": "tableau.quickHelp",
        "title": "Quick Help",
        "category": "Tableau"
      },
      {
        "command": "tableau.contextualHelp",
        "title": "Contextual Help",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.status",
        "title": "Show Extension Status",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.showLogs",
        "title": "Show Logs",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.clearLogs",
        "title": "Clear Logs",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.exportLogs",
        "title": "Export Logs",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.loggingStats",
        "title": "Show Logging Statistics",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.changeLogLevel",
        "title": "Change Log Level",
        "category": "Tableau"
      },
      {
        "command": "tableau-language-support.toggleFileLogging",
        "title": "Toggle File Logging",
        "category": "Tableau"
      }
    ],
    "keybindings": [
      {
        "command": "tableau-language-support.insertSnippet",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.formatExpression",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.validateExpression",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.insertIfStatement",
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.insertCaseStatement",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.insertLodExpression",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.showFunctionHelp",
        "key": "ctrl+shift+h",
        "mac": "cmd+shift+h",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.toggleComments",
        "key": "ctrl+/",
        "mac": "cmd+/",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.lsp.restart",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "editorTextFocus && resourceExtname == .twbl"
      },
      {
        "command": "tableau-language-support.runTests",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t",
        "when": "editorTextFocus && resourceExtname == .twbl"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run build-base -- --minify",
    "build-base": "esbuild --bundle --external:vscode src/extension.ts --outdir=out --platform=node --target=node20 --format=cjs && esbuild --bundle --external:vscode src/server.ts --outdir=out --platform=node --target=node20 --format=cjs",
    "build": "npm run build-base -- --sourcemap",
    "watch": "npm run build-base -- --sourcemap --watch",
    "test": "npm run compile && node ./node_modules/@vscode/test-electron/out/runTest.js",
    "test:hover": "node ./test-runner.js",
    "test:hover:compile": "npm run build && npm run test:hover",
    "typecheck": "tsc --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "lint": "eslint",
    "compile": "tsc --outDir out",
    "clean": "rimraf out",
    "test:all": "npm run compile && node ./out/tests/testRunner.js",
    "test:unit": "jest",
    "test:incremental": "npm run compile && node ./out/tests/runIncrementalTests.js",
    "test:error": "npm run compile && node ./out/tests/testErrorRecovery.js",
    "test:performance": "npm run compile && node ./out/tests/performance/performanceTests.js",
    "test:edge": "npm run compile && node ./out/tests/edge/edgeCaseTests.js",
    "test:integration": "npm run compile && node ./out/tests/integration/integrationTests.js",
    "test:performance": "npm run compile && node ./out/tests/performance/runPerformanceTests.js",
    "test:performance:suite": "npm run compile && npx jest --config=./src/tests/performance/jest.performance.config.js",
    "test:performance:stress": "npm run compile && npx jest --config=./src/tests/performance/jest.performance.config.js --testPathPattern=stressTests",
    "test:performance:lsp": "npm run compile && npx jest --config=./src/tests/performance/jest.performance.config.js --testPathPattern=lspPerformance",
    "test:performance:baseline": "npm run test:performance -- --baseline ./test-results/performance/baseline.json",
    "test:edge": "npm run compile && node ./out/tests/edge/edgeCaseTestRunner.js",
    "test:edge:suite": "npm run compile && npx jest --config=./src/tests/edge/jest.edge.config.js",
    "test:edge:malformed": "npm run compile && npx jest --config=./src/tests/edge/jest.edge.config.js --testPathPattern=malformedInputs",
    "test:edge:boundary": "npm run compile && npx jest --config=./src/tests/edge/jest.edge.config.js --testPathPattern=boundaryConditions",
    "test:edge:recovery": "npm run compile && npx jest --config=./src/tests/edge/jest.edge.config.js --testPathPattern=errorRecovery",
    "test:report": "open ./test-results/test-report.html"
  },
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@types/libsodium-wrappers": "^0.7.14",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^20.0.0",
    "@types/semver": "^7.5.8",
    "@types/vscode": "^1.80.0",
    "@types/which": "^2.0.1",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^2.24.0",
    "esbuild": "^0.25.0",
    "eslint": "^9.0.0",
    "eslint-config-prettier": "^9.1.0",
    "jest": "^29.7.0",
    "prettier": "3.2.5",
    "rimraf": "^6.0.1",
    "ts-jest": "^29.1.2",
    "typescript": "^5.4.3",
    "typescript-eslint": "^8.0.0"
  },
  "dependencies": {
    "camelcase": "^7.0.1",
    "libsodium-wrappers": "^0.7.15",
    "lodash-es": "^4.17.21",
    "semver": "^7.5.2",
    "vscode-languageclient": "10.0.0-next.15",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-textdocument": "^1.0.12",
    "which": "^3.0.0"
  }
}
